<Controls:MetroWindow
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro" 
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:w="clr-namespace:VCG.EPi.Enterprise.Migration.Toolset"        
		xmlns:p="clr-namespace:VCG.EPi.Enterprise.Migration.Toolset.Properties"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Name="ContentUpgrader" x:Class="VCG.EPi.Enterprise.Migration.Toolset.MainWindow" 
        Title="{x:Static p:Resources.ApplicationTitle}" Width="740" Height="440" MinWidth="740" MinHeight="440" WindowStartupLocation="CenterScreen" Closing="Application_Closing" Background="#FF1E1E1E" BorderThickness="1" BorderBrush="#FF566472">

	<Controls:MetroWindow.WindowCommands>
		<Controls:WindowCommands>
			<Button Content="{x:Static p:Resources.ApplicationAbout}" />
		</Controls:WindowCommands>
	</Controls:MetroWindow.WindowCommands>
	
	<Window.CommandBindings>
        <CommandBinding Command="New" Executed="Menu_New_Click" />
        <CommandBinding Command="Open" Executed="Menu_Open_Click" />
        <CommandBinding Command="Save" Executed="Menu_Save_Click" />
        <CommandBinding Command="SaveAs" Executed="Menu_SaveAs_Click" />
        <CommandBinding Command="w:Command.ImportEPi6" Executed="Menu_Import_Source_Click" />
        <CommandBinding Command="w:Command.ImportEPi7" Executed="Menu_Import_Target_Click" />
        <CommandBinding Command="w:Command.ExportClass" Executed="Menu_Generate_Classes_Click" />
        <CommandBinding Command="w:Command.ExportData" Executed="Menu_Export_to_File_Click" />
    </Window.CommandBindings>

    <Window.InputBindings>
        <KeyBinding Key="N" Modifiers="Ctrl" Command="New"/>
        <KeyBinding Key="O" Modifiers="Ctrl" Command="Open"/>
        <KeyBinding Key="S" Modifiers="Ctrl" Command="Save"/>
        <KeyBinding Key="S" Modifiers="Ctrl+Shift" Command="SaveAs"/>
        <KeyBinding Key="I" Modifiers="Ctrl" Command="w:Command.ImportEPi6"/>
        <KeyBinding Key="I" Modifiers="Ctrl+Shift" Command="w:Command.ImportEPi7"/>
        <KeyBinding Key="E" Modifiers="Ctrl" Command="w:Command.ExportClass"/>
        <KeyBinding Key="E" Modifiers="Ctrl+Shift" Command="w:Command.ExportData"/>
    </Window.InputBindings>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="25*"/>
            <ColumnDefinition Width="25*"/>
            <ColumnDefinition Width="250"/>
        </Grid.ColumnDefinitions>
        
        <Menu x:Name="MainMenu" Height="28" Background="#ff2d2d30" VerticalAlignment="Top" Grid.ColumnSpan="3">
			<MenuItem Header="{x:Static p:Resources.MenuCategoryFile}" Foreground="#FFF1F1F1" Margin="5,0,0,0" Background="#00888888" FontSize="12">
				<MenuItem Header="{x:Static p:Resources.MenuNew}" InputGestureText="Ctrl+N" Click="Menu_New_Click" />
				<MenuItem Header="{x:Static p:Resources.MenuOpen}" InputGestureText="Ctrl+O" Click="Menu_Open_Click" />
				<MenuItem Header="{x:Static p:Resources.MenuSave}" InputGestureText="Ctrl+S" Click="Menu_Save_Click" />
				<MenuItem Header="{x:Static p:Resources.MenuSaveAs}" InputGestureText="Ctrl+Shift+S" Click="Menu_SaveAs_Click" />
            </MenuItem>
            <MenuItem Header="{x:Static p:Resources.MenuCategoryEdit}" Foreground="#FFF1F1F1" Background="#00888888" FontSize="12">
                <MenuItem Header="{x:Static p:Resources.MenuPreferences}" InputGestureText="" Click="Menu_Preferences_Click" />
            </MenuItem>
            <MenuItem Header="{x:Static p:Resources.MenuCategoryImport}" Foreground="#FFF1F1F1" Background="#00888888" FontSize="12">
				<MenuItem Header="{x:Static p:Resources.MenuImportSource}" InputGestureText="Ctrl+I" Click="Menu_Import_Source_Click" />
				<MenuItem Header="{x:Static p:Resources.MenuImportTarget}" InputGestureText="Ctrl+Shift+I" Click="Menu_Import_Target_Click" />
            </MenuItem>
			<MenuItem Header="{x:Static p:Resources.MenuCategoryExport}" Foreground="#FFF1F1F1" Background="#00888888" FontSize="12">
				<MenuItem Header="{x:Static p:Resources.MenuExportClasses}" InputGestureText="Ctrl+E" Click="Menu_Generate_Classes_Click" />
				<MenuItem Header="{x:Static p:Resources.MenuExportImportFile}" InputGestureText="Ctrl+Shift+E" Click="Menu_Export_to_File_Click" />
            </MenuItem>
        </Menu>

		<Label Content="{x:Static p:Resources.HeadingSourceFileContents}" Margin="6,41,10,0" Height="40" VerticalAlignment="Top" Grid.ColumnSpan="2" Foreground="#FF999999" FontSize="20" FontFamily="/CGI.EPi.DataMigration;component/Resources/#Segoe UI Light"/>
        <ListView x:Name="SourcePageTypes" SizeChanged="SourcePageTypes_SizeChanged" Margin="10,86,0,35" Grid.ColumnSpan="2" AllowDrop="true" DragOver="Generic_DragOver" Drop="SourcePageTypes_Drop" SelectionChanged="SourcePageTypes_SelectionChanged" BorderThickness="0" OverridesDefaultStyle="True" IsManipulationEnabled="True">
            <ListView.View>
                <GridView>
					<GridViewColumn Width="30" Header="{x:Static p:Resources.ColumnId}" CellTemplate="{DynamicResource PageTypeIdColumn}" />
					<GridViewColumn Width="210" Header="{x:Static p:Resources.ColumnName}" CellTemplate="{DynamicResource PageTypeNameColumn}" />
					<GridViewColumn Width="60" Header="{x:Static p:Resources.ColumnBlockQuestion}" CellTemplate="{DynamicResource PageTypeBlockColumn}" />
					<GridViewColumn Width="170" Header="{x:Static p:Resources.ColumnTargetName}" CellTemplate="{DynamicResource PageTypeTargetNameColumn}" />
                </GridView>
            </ListView.View>
        </ListView>

		<Label Content="{x:Static p:Resources.HeadingMapToTarget}" Margin="10,41,10,0" Grid.Column="2" Height="40" VerticalAlignment="Top" Foreground="#FF999999" FontSize="20" FontFamily="/CGI.EPi.DataMigration;component/Resources/#Segoe UI Light" />
        <ComboBox x:Name="TargetPageTypes" SelectionChanged="TargetPageTypes_SelectionChanged" AllowDrop="true" DragOver="Generic_DragOver" Drop="TargetPageTypes_Drop" ItemTemplate="{DynamicResource Name}" Grid.Column="2" Margin="10,86,10,0" Height="23" VerticalAlignment="Top" BorderBrush="#FF3F3F46" Foreground="#FF686868"/>

		<Label Content="{x:Static p:Resources.HeadingMatchingProperties}" Margin="10,126,10,0" Grid.Column="2" Height="40" VerticalAlignment="Top" Foreground="#FF999999" FontFamily="/CGI.EPi.DataMigration;component/Resources/#Segoe UI Light" FontSize="20" />
        <ListBox x:Name="MatchingProperties" Grid.Column="2" ItemTemplate="{DynamicResource Name}" IsEnabled="False" Margin="10,171,10,35" BorderBrush="#FFB4B4B4" />

        <StatusBar x:Name="MainStatus" Grid.ColumnSpan="4" Height="26" VerticalAlignment="Bottom" Background="#ff4c5863">
            <StatusBarItem>
                <TextBlock x:Name="lblStatus" Margin="5,0,0,3" />
            </StatusBarItem>
        </StatusBar>

        <Grid.Resources>
            <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
                <Border x:Name="Border">
                    <Grid>
                        <ContentPresenter Margin="6,6,6,6" ContentSource="Header" RecognizesAccessKey="True" />
                        <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="False" Focusable="False" PopupAnimation="Fade">
                            <Border x:Name="SubmenuBorder" SnapsToDevicePixels="True" BorderThickness="1" BorderBrush="#FF333337" Background="#FF1b1b1c">
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"  />
                            </Border>
                        </Popup>
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                        <Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="true">
                        <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                        <Setter Property="Background" TargetName="Border" Value="#FF1b1b1c" />
                    </Trigger>
                    <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                        <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,4,4" />
                        <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,3" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            
            <Style TargetType="{x:Type GridViewColumnHeader}">
                <Setter Property="Background" Value="#ff252526" />
                <Setter Property="BorderBrush" Value="#ff3e3e40" />
                <Setter Property="Margin" Value="0,0,0,0" />
                <Setter Property="Height" Value="20" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <Grid SnapsToDevicePixels="true">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates"/>
                                    <VisualStateGroup x:Name="FocusStates"/>
                                    <VisualStateGroup x:Name="ValidationStates"/>
                                </VisualStateManager.VisualStateGroups>
                                <Border x:Name="HeaderBorder" BorderBrush="#ff3e3e40" Height="20" BorderThickness="0,0,1,1" Background="#ff252526">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition MaxHeight="7"/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <Rectangle x:Name="UpperHighlight" Fill="Transparent" Visibility="Hidden"/>
                                        <Border Padding="5,0,0,0" Grid.RowSpan="2">
                                            <ContentPresenter x:Name="HeaderContent" HorizontalAlignment="Left" Margin="0,0,0,1" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                    </Grid>
                                </Border>
                                <Border x:Name="HeaderHoverBorder" BorderThickness="1,0,1,1" Margin="1,1,0,0"/>
                                <Border x:Name="HeaderPressBorder" BorderThickness="1,1,1,0" Margin="1,0,0,1"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <!--Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" TargetName="HeaderBorder" Value="#ff576574"/>
                                </>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Background" TargetName="HeaderBorder" Value="#ff576574"/>
                                </Trigger-->
                                <Trigger Property="Height" Value="Auto">
                                    <Setter Property="MinHeight" Value="20"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Role" Value="Floating">
                        <Setter Property="Opacity" Value="0.4082"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                                    <Canvas x:Name="PART_FloatingHeaderCanvas">
                                        <Rectangle Fill="#FF1b1b1c" Height="{TemplateBinding ActualHeight}" Opacity="0.4697" Width="{TemplateBinding ActualWidth}"/>
                                    </Canvas>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="Role" Value="Padding">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                                    <Border x:Name="HeaderBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,1,0,1" Background="{TemplateBinding Background}"/>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="Height" Value="Auto">
                                            <Setter Property="MinHeight" Value="20"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Grid.Resources>
    </Grid>

	<Controls:MetroWindow.Resources>

		<DataTemplate x:Key="PageTypeIdColumn">
            <StackPanel Orientation="Horizontal">
                <TextBlock x:Name="lblId" Text="{Binding Source.Id}" />
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="PageTypeNameColumn">
            <StackPanel Orientation="Horizontal">
                <TextBlock x:Name="lblName" Text="{Binding Source.Name}" />
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="PageTypeBlockColumn">
            <StackPanel Orientation="Horizontal">
                <CheckBox IsChecked="{Binding ExportAsBlock, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontFamily="Segoe UI" />
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="PageTypeTargetNameColumn">
            <StackPanel Orientation="Horizontal">
                <TextBlock x:Name="lblName" Text="{Binding Target.Name, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" FontFamily="Segoe UI" />
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="PageTypeTargetIdColumn">
            <StackPanel Orientation="Horizontal">
                <TextBlock x:Name="lblName" Text="{Binding Target.Id, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="Name">
            <StackPanel Orientation="Vertical">
                <TextBlock x:Name="lblName" Text="{Binding Name, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
            </StackPanel>
        </DataTemplate>
    </Controls:MetroWindow.Resources>
</Controls:MetroWindow>
